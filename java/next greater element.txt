class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
       if(nums1.length == 0)
            return new int[0];
     int res[] = new int[nums1.length];
        if(nums2.length == 0){
            Arrays.fill(res,-1);
            return res;
        }
        Stack<Integer> stack = new Stack<>();
        Map<Integer,Integer> map = new HashMap<>();
        stack.push(nums2[nums2.length-1]);
        map.put(nums2[nums2.length-1],-1);
        for(int i = nums2.length-2;i>=0;i--){
            int peek = stack.peek();
            if(nums2[i] < peek){
               map.put(nums2[i],peek);
               stack.push(nums2[i]); 
            }else{
                if(stack.isEmpty())
                    map.put(nums2[i],-1);
                else{
                    while(!stack.isEmpty() && peek<nums2[i]){
                        stack.pop();
                        if(!stack.isEmpty())
                          peek = stack.peek();
                        else 
                          peek = -1;  
                    }
                    map.put(nums2[i],peek);
                    stack.push(nums2[i]);
                }
            }
        }
        

        for(int i=0;i<res.length;i++){
            int key = nums1[i];
            res[i] = map.get(key);
        }
        
        return res;
    }
}